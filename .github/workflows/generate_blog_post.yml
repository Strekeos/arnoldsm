name: Generate Blog Post Draft

on:
  workflow_dispatch:
    inputs:
      post_title:
        description: 'OPTIONAL: Proposed title. If blank, AI generates one based on topic.'
        required: false # No longer required
        type: string
        default: ''    # Default to empty string
      post_topic_or_keywords:
        description: 'OPTIONAL: Core topic/keywords. If blank, AI generates a non-AI topic.'
        required: false # No longer required
        type: string
        default: ''    # Default to empty string

jobs:
  generate-text-content:
    runs-on: ubuntu-latest
    permissions:
      contents: write
    outputs:
      generated_filename: ${{ steps.run-script.outputs.markdown_filename }}

    steps:
      # ... (Checkout, Setup Python, Install dependencies remain the same) ...
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Set up Python
        uses: actions/setup-python@v5
        with:
          python-version: '3.9'

      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          if [ -f requirements.txt ]; then
            pip install -r requirements.txt
          else
            echo "ERROR: requirements.txt not found!"
            exit 1
          fi

      - name: Run text generation script
        id: run-script
        env:
          OPENROUTER_API_KEY: ${{ secrets.OPENROUTER_API_KEY }}
          # Inputs can now be blank, the script will handle it
          POST_TITLE_INPUT: ${{ inputs.post_title }}
          POST_TOPIC_INPUT: ${{ inputs.post_topic_or_keywords }}
          YOUR_SITE_URL: "https://arnoldsm.pages.dev"
          YOUR_APP_NAME: "Blog Generator Action"
        run: |
          echo "$(python .github/scripts/generate_text_content.py)" >> $GITHUB_OUTPUT

      # ... (Commit and push steps remain the same) ...
      - name: Commit and push new markdown file
        if: steps.run-script.outputs.markdown_filename != ''
        run: |
          GENERATED_FILE="${{ steps.run-script.outputs.markdown_filename }}"
          # ... (rest of commit logic) ...
          git config --global user.name 'github-actions[bot]'
          git config --global user.email 'github-actions[bot]@users.noreply.github.com'
          git add "${GENERATED_FILE}"
          if ! git diff --staged --quiet -- "${GENERATED_FILE}"; then
             git commit -m "Automated: Generate draft for '${{ steps.run-script.outputs.markdown_filename }}'" # Use filename if title was generated
             git push
          else
             echo "No staged changes detected for ${GENERATED_FILE}."
          fi
      - name: Handle case where no file was generated
        if: steps.run-script.outputs.markdown_filename == ''
        run: |
          echo "Script did not output a generated filename. Skipping commit."
